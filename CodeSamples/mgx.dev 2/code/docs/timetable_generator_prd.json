{"document_title": "TimeTable Generator PRD","version": "1.0","last_updated": "2025-04-13","sections": {"1_project_overview": {"project_info": {"project_name": "timetable_generator","programming_language": "Python","framework": ["React (Frontend)", "Flask/Django (Backend)"],"description": "A Python-based web application for automated timetable generation with dashboard interface, supporting multiple user roles, genetic algorithm-based scheduling, and various features including collision prevention, faculty availability management, and role-based access control."},"product_goals": ["Streamline the academic timetable creation process through automation and intelligent scheduling","Provide role-specific access and functionality for administrators, faculty, and students","Ensure conflict-free scheduling while maintaining academic scheduling constraints"],"user_stories": [{"role": "administrator","want": "input course and faculty data","benefit": "generate conflict-free timetables for the department"},{"role": "faculty member","want": "set my availability preferences and view my teaching schedule","benefit": "manage my time effectively"},{"role": "student","want": "view my semester's timetable","benefit": "plan my academic activities"},{"role": "administrator","want": "review and approve faculty change requests","benefit": "maintain schedule integrity"},{"role": "faculty member","want": "request schedule changes","benefit": "accommodate unexpected conflicts"}]},"2_competitive_analysis": {"market_overview": [{"name": "ASC Timetables","pros": ["Comprehensive scheduling solution", "Multiple constraint handling", "Export capabilities"],"cons": ["Complex interface", "High learning curve", "Desktop-only solution"]},{"name": "TimeTabler","pros": ["Automated conflict resolution", "Multiple export formats", "Quick scheduling"],"cons": ["Limited customization", "No web interface", "Limited role management"]},{"name": "FET","pros": ["Open-source", "Highly configurable", "Strong constraint system"],"cons": ["Basic UI", "Limited user management", "Complex setup process"]},{"name": "Mimosa","pros": ["User-friendly interface", "Good visualization", "Multiple export options"],"cons": ["Limited automation", "No web version", "Expensive"]},{"name": "Prime Timetable","pros": ["Web-based solution", "Modern interface", "Good collaboration features"],"cons": ["Limited algorithm customization", "Basic reporting", "High subscription cost"]}]},"3_technical_requirements": {"core_features": {"P0": [{"category": "User Management","features": ["Role-based authentication (Admin, Faculty, Student)","Self-signup capability with admin approval","Role-specific dashboards and views"]},{"category": "Timetable Generation","features": ["Genetic algorithm implementation","Collision prevention between classes","Faculty availability consideration","Priority-based scheduling","Theory/lab hour allocation"]},{"category": "Data Management","features": ["Course information storage","Faculty availability data","Historical timetable archives","Export functionality (PDF)"]}],"P1": [{"category": "Schedule Management","features": ["Faculty change request system","Admin review interface","Manual schedule adjustment tools","Bulk data import/export"]},{"category": "Visualization","features": ["Weekly grid view","Faculty-specific views","Class-specific views","Department-wide overview"]}],"P2": [{"category": "Analytics","features": ["Usage statistics","Scheduling efficiency metrics","Faculty workload distribution","Historical data analysis"]}]},"technical_specs": {"backend": {"language": "Python 3.8+","framework": "Flask/Django","orm": "SQLAlchemy/Django ORM","auth": "JWT","api": "RESTful"},"frontend": {"framework": "React.js","styling": "Tailwind CSS","features": ["Responsive design","Grid layout system","PDF generation"]}},"database_schema": ["Users table (roles, permissions)","Courses table (type, credits, hours)","Faculty availability table","Timetable storage table","Change request tracking table"]},"4_ui_requirements": {"common_elements": ["Navigation menu","User profile section","Logout option","Help documentation","PDF export button"],"admin_dashboard": ["Timetable generation controls","Faculty management","Course management","Change request review panel","System settings"],"faculty_dashboard": ["Personal schedule view","Availability management form","Change request submission","Department timetable view"],"student_dashboard": ["Semester timetable view","PDF download option","Course list view"]},"5_data_requirements": {"course_data": ["Course code","Course name","Course type (Theory/Lab)","Credit hours","Weekly hours","Priority level"],"faculty_data": ["Personal information","Availability slots","Subject expertise","Maximum weekly hours"],"timetable_data": ["Semester information","Class schedules","Time slots","Subject allocations"]},"6_non_functional_requirements": {"performance": ["Page load time < 2 seconds","Timetable generation < 5 minutes","Support for 1000+ concurrent users","99.9% uptime"],"security": ["Role-based access control","Password encryption","Session management","Data backup"],"usability": ["Intuitive navigation","Responsive design","Cross-browser compatibility","Accessible interface"]},"7_out_of_scope": ["Room allocation system","Notification system","Mobile application","Real-time collaboration","Integration with other systems"],"8_open_questions": ["Should the system support multiple departments?","What should be the maximum iteration limit for the genetic algorithm?","How should the system handle faculty leaves and holidays?","What should be the format for bulk data import?"],"9_success_metrics": {"user_adoption": ["100% faculty registration","90% student registration","80% weekly active users"],"system_performance": ["Zero scheduling conflicts","95% first-time generation success","< 1% manual adjustments needed"],"user_satisfaction": ["> 4/5 user satisfaction rating","< 5% change requests per semester","< 2 minutes average task completion time"]}}}}